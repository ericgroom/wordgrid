// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Chat /> renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Chat
    sendMessage={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "portal",
    "props": Object {
      "children": <ChatWindow
        sendMessage={[Function]}
      />,
      "containerInfo": <div
        id="chat"
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "messages": undefined,
        "sendMessage": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.portal),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "portal",
      "props": Object {
        "children": <ChatWindow
          sendMessage={[Function]}
        />,
        "containerInfo": <div
          id="chat"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "messages": undefined,
          "sendMessage": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.portal),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
